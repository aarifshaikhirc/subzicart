@model subzicart.Models.productMaster

@{
    ViewBag.Title = "Add New Product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link rel="stylesheet" href="https://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.8.3.js"></script>
<script src="https://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.jquery.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.css">

<script type="text/javascript">


    $(document).ready(function () {

        $.getJSON("loadCategory", { sID: 0 },
            function (data) {
                var select = $("#ddlCategory");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select"
                }));
                $.each(data, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });


        $.getJSON("loadBrand", { sID: 0 },
            function (data) {
                var select = $("#ddlBrand");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select"
                }));
                $.each(data, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });



        //$("#ddlCategory").change(function () {

        //    var sID = $(this).val();

        //    $.getJSON("LoadSubcategorybyCategory", { sID: sID },
        //        function (data) {
        //            var select = $("#ddlSubCategory");
        //            select.empty();
        //            select.append($('<option/>', {
        //                value: 0,
        //                text: "Select"
        //            }));
        //            $.each(data, function (index, itemData) {
        //                select.append($('<option/>', {
        //                    value: itemData.Value,
        //                    text: itemData.Text
        //                }));
        //            });
        //        });

        //    $(function () {
        //        $(".chzn-select").chosen();
        //    });
        //});


        $("#ddlBrand").change(function () {

            var sID = $(this).val();

            $.getJSON("LoadSKU", { sID: sID },
                function (data) {
                    $.each(data, function (index, itemData) {
                        if (itemData.Value == "SKU Range Exceed") {
                            alert(itemData.Value);
                        }
                        else {
                            $("#SKU").val(itemData.Value);
                        }
                    });
                });
        });

    });

</script>

<h2>Add New Product</h2>

@using (Html.BeginForm("addproduct", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @if (ViewBag.msg == "Your Product is saved Successfully")
                {
                    <script>
                        alert("Your Product is saved Successfully");
                        window.location.href = "productlist";
                    </script>
                }
                else
                {
                    <span style="color:red">   @ViewBag.msg</span>
                }
            </div>

        </div>
        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <select id="ddlCategory" name="ddlCategory" class="form-control">
                    <option>Select</option>
                </select>
            </div>
            @Html.Label("Sub Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*<input id="txtSearch" type="text" onkeyup="SearchEmployees(this,'#ddlSubCategory');" />
                    <span id="spnCount"></span>*@
                <select id="ddlSubCategory" name="ddlSubCategory" class="form-control chzn-select" multiple="true">
                    <option>Select</option>

                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <select id="ddlBrand" name="ddlBrand" class="form-control">
                    <option>Select</option>
                </select>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control", @maxlength = "80" } })
                @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @readonly = true } })
                @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.aboutProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.aboutProduct, new { htmlAttributes = new { @class = "form-control", @maxlength = "600" } })
                @Html.ValidationMessageFor(model => model.aboutProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @maxlength = "600" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.costPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.costPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.costPrice, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.retailPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.retailPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.retailPrice, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.salePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.salePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salePrice, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-3">
                <input type="submit" value="Save" class="btn btn-default" />
                &nbsp; &nbsp;
                @Html.ActionLink("Cancel", "productlist", new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {

            var sID = 1;

            $.getJSON("LoadSubcategorybyCategory", { sID: sID },
                function (data) {
                    var select = $("#ddlSubCategory");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Select"
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value + '-' + itemData.Text,
                            text: itemData.Text
                        }));
                    });

                    $(function () {
                        $(".chzn-select").chosen();
                    });

                });
        });

    </script>



}


